# Generated by Django 5.0.2 on 2025-04-03 11:46

from django.db import migrations
from django.db.migrations.operations.special import RunSQL


class Migration(migrations.Migration):

    dependencies = [
        ("accounts", "0027_alter_user_preferred_currency"),
    ]

    operations = [
        # For SQLite, we need a different approach - recreate the table
        RunSQL(
            # Forward SQL - safely migrate data and handle the index issue
            """
            -- Step 1: Create a new temporary table without the old column
            CREATE TABLE accounts_user_new (
                id VARCHAR(20) NOT NULL PRIMARY KEY,
                password VARCHAR(128) NOT NULL,
                last_login DATETIME NULL,
                is_superuser BOOL NOT NULL,
                username VARCHAR(150) NOT NULL UNIQUE,
                first_name VARCHAR(150) NOT NULL,
                last_name VARCHAR(150) NOT NULL,
                email VARCHAR(254) NOT NULL,
                is_staff BOOL NOT NULL,
                is_active BOOL NOT NULL,
                date_joined DATETIME NOT NULL,
                phone_number VARCHAR(15) NULL UNIQUE,
                address TEXT NULL,
                user_type VARCHAR(20) NOT NULL,
                is_verified BOOL NOT NULL,
                default_shipping_method_id INTEGER NULL REFERENCES shipping_rates_servicetype (id) ON DELETE SET NULL,
                preferred_currency_id INTEGER NULL REFERENCES shipping_rates_currency (id) ON DELETE SET NULL,
                plain_password VARCHAR(255) NULL,
                created_at DATETIME NOT NULL,
                updated_at DATETIME NOT NULL,
                country_id VARCHAR(20) NULL REFERENCES accounts_usercountry (id) ON DELETE SET NULL
            );
            
            -- Step 2: Copy data from old table to new table
            INSERT INTO accounts_user_new 
            SELECT id, password, last_login, is_superuser, username, first_name, last_name,
                   email, is_staff, is_active, date_joined, phone_number, address,
                   user_type, is_verified, default_shipping_method_id, preferred_currency_id,
                   plain_password, created_at, updated_at, country_id
            FROM accounts_user;
            
            -- Step 3: Drop old table and rename new table
            DROP TABLE accounts_user;
            ALTER TABLE accounts_user_new RENAME TO accounts_user;
            
            -- Step 4: Recreate indexes
            CREATE INDEX accounts_user_default_shipping_method_id ON accounts_user (default_shipping_method_id);
            CREATE INDEX accounts_user_preferred_currency_id ON accounts_user (preferred_currency_id);
            CREATE INDEX accounts_user_country_id ON accounts_user (country_id);
            CREATE INDEX accounts_user_username_like ON accounts_user (username varchar_pattern_ops);
            CREATE INDEX accounts_user_phone_number_like ON accounts_user (phone_number varchar_pattern_ops);
            """,
            
            # Reverse SQL - we can't really reverse this operation safely
            "-- No reverse SQL; this is a one-way migration"
        ),
    ]
